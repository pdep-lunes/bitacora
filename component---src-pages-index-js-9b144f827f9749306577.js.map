{"version":3,"sources":["webpack://pdep-lunes-bitacora/./src/components/post-list-item.js","webpack://pdep-lunes-bitacora/./src/pages/index.js"],"names":["node","excerpt","slug","fields","frontmatter","tags","date","description","title","key","style","fontFamily","fontSize","marginBottom","rhythm","Link","boxShadow","color","to","className","map","tag","i","dateParser","dangerouslySetInnerHTML","__html","props","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","currentYear","Date","getFullYear","postsToShow","React","filter","split","YYYY","parseInt","location","keywords","id"],"mappings":"oLAoDA,IA5CqB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACdC,EAAYD,EAAZC,QACAC,EAASF,EAAKG,OAAdD,KAFyB,EAGGF,EAAKI,YAAjCC,EAHyB,EAGzBA,KAAMC,EAHmB,EAGnBA,KAAMC,EAHa,EAGbA,YACdC,EAAQR,EAAKI,YAAYI,OAASR,EAAKG,OAAOD,KACpD,OACE,uBAAKO,IAAKP,GACR,sBACEQ,MAAO,CACLC,WAAY,yBACZC,SAAU,UACVC,cAAcC,QAAO,EAAI,KAG3B,gBAAC,EAAAC,KAAD,CAAML,MAAO,CAAEM,UAAU,OAASC,MAAO,WAAaC,GAAIhB,GACvDM,IAGJH,EACC,uBAAKc,UAAU,kBACZd,EAAKe,KAAI,SAACC,EAAKC,GAAN,OACR,gBAAC,IAAD,CAAKD,IAAKA,EAAKZ,IAAKa,QAGtB,KACJ,yBACEZ,MAAO,CACLO,MAAO,aAGRM,OAAWjB,IAEd,qBACEI,MAAO,CACLO,MAAO,WAETO,wBAAyB,CACvBC,OAAQlB,GAAeN,Q,8FCKjC,UAxCkB,SAACyB,GAAW,IACpBC,EAASD,EAATC,KACFC,EAAYD,EAAKE,KAAKC,aAAatB,MACnCuB,EAAQJ,EAAKK,kBAAkBC,MAE/BC,GAAc,IAAIC,MAAOC,cAEzBC,EAAcC,WAAc,WAChC,OAAOP,EAAMQ,QAAO,YAAsC,IAAD,IAAnCvC,KAAQI,YAAcE,KACdkC,MAAM,KAAnBC,GADwC,gBAEvD,OAAOC,SAASD,KAAUP,OAE3B,CAACA,EAAaH,IAEjB,OACE,gBAAC,IAAD,CAAQY,SAAUjB,EAAMiB,SAAUnC,MAAOoB,GACvC,gBAAC,IAAD,CACEpB,MAAM,OACNoC,SAAU,CAAC,OAAD,uFAaZ,gBAAC,IAAD,MACCP,EAAYjB,KAAI,gBAAGpB,EAAH,EAAGA,KAAH,OACf,gBAAC,IAAD,CAAcS,IAAKT,EAAK6C,GAAI7C,KAAMA","file":"component---src-pages-index-js-9b144f827f9749306577.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\nimport { dateParser } from '../utils/dateParser'\n\nimport Tag from '../components/tag'\n\nconst PostListItem = ({ node }) => {\n  const { excerpt } = node\n  const { slug } = node.fields\n  const { tags, date, description } = node.frontmatter\n  const title = node.frontmatter.title || node.fields.slug\n  return (\n    <div key={slug}>\n      <h3\n        style={{\n          fontFamily: 'Montserrat, sans-serif',\n          fontSize: '1.75rem',\n          marginBottom: rhythm(1 / 4),\n        }}\n      >\n        <Link style={{ boxShadow: `none`, color: '#2b2b2b' }} to={slug}>\n          {title}\n        </Link>\n      </h3>\n      {tags ? (\n        <div className=\"tags-container\">\n          {tags.map((tag, i) => (\n            <Tag tag={tag} key={i} />\n          ))}\n        </div>\n      ) : null}\n      <small\n        style={{\n          color: '#929292',\n        }}\n      >\n        {dateParser(date)}\n      </small>\n      <p\n        style={{\n          color: '#929292',\n        }}\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n    </div>\n  )\n}\n\nexport default PostListItem\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport '../css/tags.css'\nimport PostListItem from '../components/post-list-item'\n\n\nconst BlogIndex = (props) => {\n  const { data } = props\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  const currentYear = new Date().getFullYear()\n\n  const postsToShow = React.useMemo(() => {\n    return posts.filter(({node: { frontmatter: {date} }}) => {\n      const [DD, MM, YYYY] = date.split('-')\n      return parseInt(YYYY) === currentYear\n    })\n  }, [currentYear, posts])\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO\n        title=\"PDEP\"\n        keywords={[\n          `pdep`,\n          `paradigmas`,\n          `funcional`,\n          `haskell`,\n          `utn`,\n          `logico`,\n          `prolog`,\n          `oop`,\n          `objetos`,\n          `wollok`,\n        ]}\n      />\n      <Bio />\n      {postsToShow.map(({ node }) => (\n        <PostListItem key={node.id} node={node} />\n      ))}\n      {/* <div></div> */}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD-MM-YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}