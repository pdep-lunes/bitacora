{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2024/funcional/clase-01/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Bit√°cora","author":"pdep"}},"markdownRemark":{"id":"35c6b4b0-eeba-5362-a184-d26d55507dd5","excerpt":"Qu√© hacer para la clase que viene: Unirse a discord siguiendo este instructivo. Intentar instalarse Haskell. No lo vamos a estar usando hasta despu√©s del 8/‚Ä¶","html":"<h2 id=\"qu√©-hacer-para-la-clase-que-viene\" style=\"position:relative;\"><a href=\"#qu%C3%A9-hacer-para-la-clase-que-viene\" aria-label=\"qu√© hacer para la clase que viene permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Qu√© hacer para la clase que viene:</h2>\n<ul>\n<li>Unirse a <a href=\"https://discord.gg/p4bKxGDE\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">discord</a> siguiendo este <a href=\"https://docs.google.com/document/d/1KhlCwxp0c6gOC2plRDMJvgiBwU7-z7uBRcO-fa4HIyY/edit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">instructivo</a>.</li>\n<li>Intentar <a href=\"https://www.pdep.com.ar/software/haskell\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">instalarse Haskell</a>. No lo vamos a estar usando hasta despu√©s del 8/4 pero pueden ir probando cositas y preguntarnos cosas por Discord.</li>\n<li>Armar grupo. Pod√©s buscar integrantes en el canal <code class=\"language-text\">#buscando-grupo</code> de Discord. Una vez que ya lo tengas armado, anunciarlo en el canal <code class=\"language-text\">#grupos</code> indicando qui√©nes lo integran (etiquetando a las personas).</li>\n</ul>\n<h2 id=\"primero-un-poco-de-burocracia\" style=\"position:relative;\"><a href=\"#primero-un-poco-de-burocracia\" aria-label=\"primero un poco de burocracia permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Primero un poco de burocracia‚Ä¶</h2>\n<p>La materia tiene 3Ô∏è‚É£ parciales.  </p>\n<p>¬øC√≥mo los promociono?\n8 o m√°s en los 3 parciales (con la posibilidad de recuperar 1 si te sacaste menos de 8).\nTPs aprobados.</p>\n<p>¬øC√≥mo simplemente los apruebo?\n6 o m√°s en los 3 parciales (hay 2 recuperatorios por cada parcial).\nTPs aprobados.</p>\n<h2 id=\"qu√©-es-un-paradigma-de-programaci√≥n\" style=\"position:relative;\"><a href=\"#qu%C3%A9-es-un-paradigma-de-programaci%C3%B3n\" aria-label=\"qu√© es un paradigma de programaci√≥n permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>¬øQu√© es un paradigma de programaci√≥n?</h2>\n<p>Un paradigma es una forma en especial de pensar la soluci√≥n a un problema, en este caso, un problema de programaci√≥n üë©‚Äçüíªüë®‚Äçüíª. Para ello, vamos a necesitar herramientas üîß y conceptos üìñ que cambiar√°n de paradigma en paradigma. </p>\n<p>Los que veremos en la cursada ser√°n los paradigmas <strong>funcional</strong>, <strong>l√≥gico</strong> y <strong>de objetos</strong> üòÆ. ¬°Empecemos!</p>\n<h2 id=\"expresividad-y-declaratividad\" style=\"position:relative;\"><a href=\"#expresividad-y-declaratividad\" aria-label=\"expresividad y declaratividad permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Expresividad y declaratividad</h2>\n<p>Dos conceptos muy pero muy importantes que nos van a acompa√±ar tooodoo este a√±o. Son transversales a los 3 paradigmas.</p>\n<p>La <strong>expresividad</strong> viene de la mano de cu√°n <em>entendible</em> es nuestro c√≥digo. De c√≥mo nombramos a las variables, funciones, m√©todos‚Ä¶ Tiene que estar escrito de tal forma de que lo entiendas vos, tu colega o alguien que no sepa programaci√≥n tanto hoy como dentro de unos a√±os. </p>\n<p>La <strong>declaratividad</strong> tiene que ver con ocultar los detalles algor√≠tmicos de nuestro c√≥digo. Enfocarnos en el <em>qu√© y no en el c√≥mo</em>.</p>\n<p>Estos dos conceptos son complementarios y vamos a buscar que nuestras soluciones sean lo m√°s declarativas y expresivas que podamos. No existe EL c√≥digo expresivo y declarativo, sino que existen c√≥digos m√°s declarativos y expresivos que otros. </p>\n<p>¬°Veamos unos ejemplos!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">-- Soluci√≥n A\n‚Äã\nint d(int c[]) {\n  int a = 0;\n  for (int b = 0; c[b] != NULL; b++) {\n    if (c[b] % 2 == 0) {\n      a++;\n    }\n  }\n  return a;\n}\n‚Äã\n-- Soluci√≥n B\n‚Äã\nint cantidadDeNumerosPares(int* unosNumeros) {\n  int cantidadDePares = 0;\n  for (int indice = 0;  != NULL; indice++) {\n    if (unosNumeros[indice] % 2 == 0) {\n      cantidadDePares++;\n    }\n  }\n  return cantidadDePares;\n}\n‚Äã\n-- Soluci√≥n C\n‚Äã\nint cantidadDeNumerosPares(int* unosNumeros) {\n  int cantidadDePares = 0;\n  for (int indice = 0;  != NULL; indice++) {\n    if (esNumeroPar(unosNumeros[indice])) {\n      cantidadDePares++;\n    }\n  }\n  return cantidadDePares;\n}</code></pre></div>\n<p>Dadas esas soluciones, ¬°compar√©moslas!</p>\n<p>La soluci√≥n A es menos expresiva que las otras dos, pero igual de declarativa que la B, aunque menos declarativa que la C.\nLa soluci√≥n B es m√°s expresiva que la A, e igual que la C, pero menos declarativa que la C, aunque igual de declarativa que la A.\nLa soluci√≥n C es la m√°s expresiva junto con la B y es la m√°s declarativa.</p>\n<p>Sin embargo, todas estas soluciones tienen algo en com√∫n: est√°n escritas en el mismo lenguaje de programaci√≥n. Hay otros lenguajes que facilitan que nuestras soluciones sean m√°s declarativas. Por ejemplo, este mismo problema se podr√≠a solucionar utilizando el lenguaje Haskell, haciendo:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cantidadDeNumerosPares numeros = (length.filter even) numeros</code></pre></div>\n<p>No te asustes si no pudiste darte cuenta tan f√°cilmente qu√© soluci√≥n era m√°s expresiva o declarativa que la otra üò®. Es una habilidad que se va adquiriendo con la experiencia, as√≠ que ¬°a hacer muchos ejercicios! üí™üíª</p>\n<h2 id=\"links-√∫tiles\" style=\"position:relative;\"><a href=\"#links-%C3%BAtiles\" aria-label=\"links √∫tiles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Links √∫tiles</h2>\n<ul>\n<li><a href=\"https://drive.google.com/file/d/1gcybc5zNBqQ7vu6Ku7NGeUWhlLGwnbqf/view?usp=sharing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video de esta clase en 2021</a></li>\n<li><a href=\"https://docs.google.com/presentation/d/1VnfRbibC9Z4kWK0iOUDi-3KMNEzGw5bPFUzBw95o6IU/edit?usp=sharing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PPT de presentaci√≥n</a></li>\n</ul>","frontmatter":{"title":"Presentaci√≥n y primeros conceptos","date":"26-03-2024","description":"Primera clase de PdeP","tags":["expresividad","declaratividad","paradigmas"]}}},"pageContext":{"slug":"/2024/funcional/clase-01/","previous":{"fields":{"slug":"/2023/objetos/clase-21/"},"frontmatter":{"title":"Vig√©simo primera clase","date":"22-10-2023"}},"next":{"fields":{"slug":"/2024/funcional/clase-02/"},"frontmatter":{"title":"Funcional, composici√≥n y tipos","date":"08-04-2024"}}}},
    "staticQueryHashes": ["452372368","63159454"]}