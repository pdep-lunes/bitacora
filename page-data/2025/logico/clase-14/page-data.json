{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2025/logico/clase-14/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Bit√°cora","author":"pdep"}},"markdownRemark":{"id":"72fdc08b-d9eb-5b98-ab83-becfa65efc32","excerpt":"Tarea: Hacer el TP grupal para el primer lunes pos vacaciones (04/08). ¬°Estudiar para el parcial! Pueden practicar con todos los que aparezcan en la p√°gina de‚Ä¶","html":"<h2 id=\"tarea\" style=\"position:relative;\"><a href=\"#tarea\" aria-label=\"tarea permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tarea:</h2>\n<ul>\n<li>Hacer el <a href=\"https://docs.google.com/document/d/1ImcsLsk4HaWelo6m0esDB8RvMj0PiVvvXKRiX7p_ArQ/edit?tab=t.0#heading=h.ur5u8ali7kou\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TP grupal</a> para el primer lunes pos vacaciones (04/08).</li>\n<li>¬°Estudiar para el parcial! Pueden practicar con todos los que aparezcan en la <a href=\"https://www.pdep.com.ar/material/parciales\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p√°gina de PdeP</a>, empezando por los que tengan resoluci√≥n, para que puedan ir chequeando. De esa lista recomendamos que prioricen, luego de que hagan los que tienen resoluci√≥n, <a href=\"https://drive.google.com/file/d/1xJNQzdkVdGVQcd_y4uTUKWyf0pt-OJSH/view?usp=drive_link\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Steam Summer Sale</a>, <a href=\"https://docs.google.com/document/d/15mo_2391atBqMjcYzLtKvGG6JiPzjbeyEGVlwZjv4B8/edit#heading=h.qr1tbl1vrwzf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pulp Fiction</a> y <a href=\"https://drive.google.com/file/d/1x4X-0AfaKK3Zv-twZfsviXRlH6Xg2Oxt/view\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rey Leon</a>. Tambi√©n les dejamos <a href=\"https://docs.google.com/document/d/1VUNyZQXITv9CiSz9VjFwoQRVe8o03CtyvTS79UNl0O8/edit?usp=sharing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">iL√≥gico</a> que contieneerrores comunes que se pueden dar en este paradigma. Pueden encontrar la soluci√≥n <a href=\"https://github.com/pdep-lunes/pdep-clases-2021/blob/master/logico/clase-15.pl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ac√°</a></li>\n</ul>\n<h2 id=\"qu√©-vimos-hoy\" style=\"position:relative;\"><a href=\"#qu%C3%A9-vimos-hoy\" aria-label=\"qu√© vimos hoy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>¬øQu√© vimos hoy?</h2>\n<ul>\n<li><code class=\"language-text\">is</code></li>\n<li>Listas</li>\n<li><code class=\"language-text\">findall</code></li>\n</ul>\n<h2 id=\"is\" style=\"position:relative;\"><a href=\"#is\" aria-label=\"is permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>is</h2>\n<p><code class=\"language-text\">is</code> es un predicado que relaciona a una cuenta <em>(a la derecha)</em> con su resultado <em>(a la izquierda)</em>. Es inversible para el resultado: liga la variable del <code class=\"language-text\">Resultado</code> al resultado de la expresi√≥n matem√°tica de la derecha.</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\">Resultado <span class=\"token operator\">is</span> ExpresionMatematica</code></pre></div>\n<p>Entonces:</p>\n<ul>\n<li>¬øCu√°ndo usamos <code class=\"language-text\">is</code>?<br>\n<strong>Solamente</strong> cuando necesitamos realizar cuentas que tienen sentido.</li>\n<li>¬øY en d√≥nde m√°s?<br>\nEn ning√∫n otro caso. Usar <code class=\"language-text\">is</code> s√≥lo para ligar variables est√° <strong>MAL</strong> y nadie quisiera reprobar su parcial de l√≥gico por eso. üëÆüèª‚Äç</li>\n</ul>\n<p>En la clase lo utilizamos cuando hicimos <code class=\"language-text\">cantidadDePaginas</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">cantidadDePaginas</span><span class=\"token punctuation\">(</span>Obra<span class=\"token punctuation\">,</span> CantidadDePaginas<span class=\"token punctuation\">)</span> <span class=\"token operator\">:-</span> \n\t<span class=\"token function\">esDeTipo</span><span class=\"token punctuation\">(</span>Obra<span class=\"token punctuation\">,</span> Tipo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">paginasPorTipo</span><span class=\"token punctuation\">(</span>Tipo<span class=\"token punctuation\">,</span> CantidadDePaginas<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n\n<span class=\"token function\">paginasPorTipo</span><span class=\"token punctuation\">(</span><span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">,</span> CantidadDeCapitulos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CantidadDePaginas<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n\tCantidadDePaginas <span class=\"token operator\">is</span> CantidadDeCapitulos <span class=\"token operator\">*</span> <span class=\"token number\">20.</span>\n\n<span class=\"token function\">paginasPorTipo</span><span class=\"token punctuation\">(</span><span class=\"token function\">libroDeCuentos</span><span class=\"token punctuation\">(</span>CantidadDeCuentos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CantidadDePaginas<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n\tCantidadDePaginas <span class=\"token operator\">is</span> CantidadDeCuentos <span class=\"token operator\">*</span> <span class=\"token number\">5.</span>\n\n<span class=\"token function\">paginasPorTipo</span><span class=\"token punctuation\">(</span><span class=\"token function\">cientifico</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n\n<span class=\"token function\">paginasPorTipo</span><span class=\"token punctuation\">(</span><span class=\"token function\">bestSeller</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">,</span> CantidadDePaginas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CantidadDePaginas<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Pero fijate que solo lo utilizamos en las novelas y en los libros de cuentos. Para los best seller y los libros cient√≠ficos usamos Pattern Matching ¬°porque no hab√≠a cuentas!</p>\n<h2 id=\"findall-y-listas\" style=\"position:relative;\"><a href=\"#findall-y-listas\" aria-label=\"findall y listas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>findall y listas</h2>\n<p>Ahora queremos saber el puntaje de un autor, este se calcula como <em>3 * cantidad de obras best seller que escribi√≥.</em></p>\n<p>Recordemos, que en nuestra base de conocimientos, contamos con un predicado <code class=\"language-text\">esBestSeller/1</code> que nos dice si una obra es best seller.</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">esBestSeller</span><span class=\"token punctuation\">(</span>UnaObra<span class=\"token punctuation\">)</span> <span class=\"token operator\">:-</span>\n  <span class=\"token function\">copiasVendidas</span><span class=\"token punctuation\">(</span>UnaObra<span class=\"token punctuation\">,</span> CantidadVendida<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  CantidadVendida <span class=\"token operator\">></span> <span class=\"token number\">50000.</span></code></pre></div>\n<p>As√≠ que podemos arrancar escribiendo un predicado que nos diga las obras que escribi√≥ un autor que son best sellers:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">escribioBestSeller</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Obra<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Obra<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">esBestSeller</span><span class=\"token punctuation\">(</span>Obra<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Y en nuestra consola podemos hacer consultas como esta:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">escribioLibroBestSeller</span><span class=\"token punctuation\">(</span>Artista<span class=\"token punctuation\">,</span> Obra<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\nArtista <span class=\"token operator\">=</span> elsaBornemann<span class=\"token punctuation\">,</span>\nObra <span class=\"token operator\">=</span> socorro <span class=\"token operator\">;</span>\nArtista <span class=\"token operator\">=</span> neilGaiman<span class=\"token punctuation\">,</span>\nObra <span class=\"token operator\">=</span> sandman <span class=\"token operator\">;</span>\nArtista <span class=\"token operator\">=</span> alanMoore<span class=\"token punctuation\">,</span>\nObra <span class=\"token operator\">=</span> watchmen <span class=\"token operator\">;</span>\nArtista <span class=\"token operator\">=</span> brianAzarello<span class=\"token punctuation\">,</span>\nObra <span class=\"token operator\">=</span> cienBalas <span class=\"token operator\">;</span>\nArtista <span class=\"token operator\">=</span> frankMiller<span class=\"token punctuation\">,</span>\nObra <span class=\"token operator\">=</span> elCaballeroOscuroRegresa <span class=\"token operator\">;</span>\nArtista <span class=\"token operator\">=</span> frankMiller<span class=\"token punctuation\">,</span>\nObra <span class=\"token operator\">=</span> batmanAnioUno <span class=\"token operator\">;</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>Si bien, como <code class=\"language-text\">escribioBestSeller</code> es inversible, podemos consultar por los valores que puede tomar la variable Obra. ¬øPero c√≥mo podr√≠amos trabajar con todas las obras best seller que escribi√≥ un autor al mismo tiempo? Bueno, ¬°podr√≠amos agruparlo en una lista!</p>\n<p>Para lograr esto contamos con un predicado llamado <code class=\"language-text\">findall/3</code>. Este se escribe de la forma <code class=\"language-text\">findall(Formato, Consulta, Lista)</code> y es inversible para su √∫ltimo argumento. Al igual que <code class=\"language-text\">forall</code>, <code class=\"language-text\">findall</code> es un predicado de orden superior, ya que su segundo par√°metro es una consulta. La idea del findall es generar los individuos que cumplan con la consulta y agruparlos en una lista.  </p>\n<p>Entonces, ahora podr√≠amos escribir un predicado <code class=\"language-text\">obrasBestSellerQueEscribio/2</code> que relacione a un autor con todos las obras que escribi√≥ y que adem√°s son best sellers.</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">obrasBestSellerQueEscribio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Obras<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">findall</span><span class=\"token punctuation\">(</span>Obra<span class=\"token punctuation\">,</span> <span class=\"token function\">escribioBestSeller</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Obra<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Obras<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Y podemos consultar:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token operator\">?-</span> <span class=\"token function\">obrasBestSellerQueEscribio</span><span class=\"token punctuation\">(</span>Artista<span class=\"token punctuation\">,</span> Obras<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\nArtista <span class=\"token operator\">=</span> elsaBornemann<span class=\"token punctuation\">,</span>\nObras <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>socorro<span class=\"token punctuation\">]</span> <span class=\"token operator\">;</span>\nArtista <span class=\"token operator\">=</span> neilGaiman<span class=\"token punctuation\">,</span>\nObras <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>sandman<span class=\"token punctuation\">,</span> americanGods<span class=\"token punctuation\">,</span> buenosPresagios<span class=\"token punctuation\">]</span> <span class=\"token operator\">;</span>\nArtista <span class=\"token operator\">=</span> alanMoore<span class=\"token punctuation\">,</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>Ahora, la cantidad de obras best seller que escribi√≥ ese autor ser√≠a el tama√±o de esa lista.\nY bueno, ¬øc√≥mo creen que prolog podr√≠a relacionar a una lista con su tama√±o?\nS√≠, ¬°con un predicado ü§©! Contamos con <code class=\"language-text\">length(Lista, Tamanio)</code>, que es inversible para el tama√±o.</p>\n<p>Entonces podr√≠amos escribir:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">cantidadDeObrasBestSeller</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Cantidad<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">obrasBestSellerQueEscribio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> UnasObras<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>UnasObras<span class=\"token punctuation\">,</span> Cantidad<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Y ahora, por fin, ya podemos resolver nuestro problema inicial üòù:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">puntaje</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Puntaje<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">cantidadDeObrasBestSeller</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Cantidad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    Puntaje <span class=\"token operator\">is</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> Cantidad<span class=\"token operator\">.</span></code></pre></div>\n<p>Volvamos un segundo a analizar <code class=\"language-text\">obrasBestSellerQueEscribio</code>. ¬øPor qu√© es necesario generar al autor? Probemos qu√© pasa sin generarlo:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token operator\">?-</span> <span class=\"token function\">obrasBestSellerQueEscribio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Obras<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\nObras <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>socorro<span class=\"token punctuation\">,</span> sandman<span class=\"token punctuation\">,</span> watchmen<span class=\"token punctuation\">,</span> cienBalas<span class=\"token punctuation\">,</span> elCaballeroOscuroRegresa<span class=\"token punctuation\">,</span> batmanAnioUno<span class=\"token punctuation\">,</span> americanGods<span class=\"token punctuation\">,</span> buenosPresagios<span class=\"token punctuation\">,</span> buenosPresagios<span class=\"token operator\">|...</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span></code></pre></div>\n<p>¬øQu√© es lo que estamos haciendo mal? Al no ligar la variable autor a cada uno de los individuos, la pregunta que estamos haciendo en este caso es: ¬øCu√°les son obras best seller? cuando lo que realmente se quiere lograr es ¬øCu√°les son obra best seller de cada Autor?</p>\n<p>Es importante tener cuidado con el uso de <code class=\"language-text\">member</code>. Un cl√°sico error del paradigma l√≥gico es utilizar un <code class=\"language-text\">member</code> con un conjunto armado con un <code class=\"language-text\">findall</code>. Cuando queremos utilizar un <code class=\"language-text\">findall</code> para tener un conjunto, nunca deber√≠amos querer saber si un elemento est√° dentro de ese conjunto ya que cont√°bamos con la condici√≥n para saberlo previamente. Sigamos el siguiente ejemplo, queremos saber si una obra es best seller del gusto de Gus:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">obrasBestSellerQueEscribioQueLeGustanAGus</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Obras<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">findall</span><span class=\"token punctuation\">(</span>Obra<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token function\">esBestSeller</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Obra<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">leGustaA</span><span class=\"token punctuation\">(</span>gus<span class=\"token punctuation\">,</span> Obra<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Obras<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n\n<span class=\"token function\">esBestSellerDelGustoDeGus</span><span class=\"token punctuation\">(</span>Obra<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n  <span class=\"token function\">obrasBestSellerQueEscribioQueLeGustanAGus</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">,</span> Obras<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">member</span><span class=\"token punctuation\">(</span>Obra<span class=\"token punctuation\">,</span> Obras<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Este modelo es incorrecto conceptualmente: estamos armando una lista para preguntar si un elemento est√° en la misma cuando pod√≠amos resolver directamente con una consulta:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">esBestSellerDelGustoDeGus</span><span class=\"token punctuation\">(</span>Obra<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n  <span class=\"token function\">esBestSeller</span><span class=\"token punctuation\">(</span>Obra<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">leGustaA</span><span class=\"token punctuation\">(</span>gus<span class=\"token punctuation\">,</span> Obra<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>No necesit√°bamos una lista para poder cumplir el requerimiento. En este caso, nuestra soluci√≥n es mucho m√°s declarativa. </p>\n<p>Como pudimos observar con el ejemplo anterior, en el segundo argumento del <code class=\"language-text\">findall</code>, podemos llegar a necesitar consultas m√°s complejas, las cuales debemos encerrar entre par√©ntesis (como <code class=\"language-text\">findall(Obra, (escribioBestSeller(Autor, Obra), leGustaAGus(Obra)), Obras).</code>). Pero es importante ver que muy probablemente si tenemos consultas compuestas en un findall, nos convendr√≠a delegar en una consulta que las abarque a ambas (como <code class=\"language-text\">esBestSellerDelGustoDeGus(Autor, Obra)</code>)</p>\n<p>Adem√°s de poder generar conjuntos, tambi√©n podemos utilizar listas con individuos dentro de nuestro modelado. Para mostrar esto, vamos a introducir las obras fant√°sticas, las cu√°les cuentan con un conjunto de elementos m√°gicos. Agreguemos el nuevo tipo de obra:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token comment\">%fantastica(ElementosM√°gicos)</span>\n<span class=\"token function\">esDeGenero</span><span class=\"token punctuation\">(</span>sandman<span class=\"token punctuation\">,</span> <span class=\"token function\">fantastica</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>yelmo<span class=\"token punctuation\">,</span> bolsaDeArena<span class=\"token punctuation\">,</span> rubi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Vamos a agregar un nuevo tipo copado para las obras fant√°sticas: aquellas obras que tengan un rub√≠. ¬øC√≥mo podemos saber si una lista incluye un elemento? Tan simple como usar el predicado <code class=\"language-text\">member/2</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">esBunGenero</span><span class=\"token punctuation\">(</span><span class=\"token function\">fantastica</span><span class=\"token punctuation\">(</span>ElementosMagicos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n  <span class=\"token function\">member</span><span class=\"token punctuation\">(</span>rubi<span class=\"token punctuation\">,</span> ElementosMagicos<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Para terminar de aclarar los conceptos, vamos a realizar otro ejercicio. Queremos saber el promedio de copias que vendi√≥ un autor en toda su vida. Para ello, podemos empezar armando un predicado que relacione un autor con cada cantidad de copias vendida por obra:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">vendio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Copias<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Obra<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">copiasVendidas</span><span class=\"token punctuation\">(</span>Obra<span class=\"token punctuation\">,</span> Copias<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Con esta informaci√≥n podemos armar el conjunto de copias vendidas de cada autor. ¬øY c√≥mo sumamos la lista para obtener el promedio? ¬°F√°cil! Prolog nos da <code class=\"language-text\">sumlist</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">promedioCopiasVendidas</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Promedio<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">findall</span><span class=\"token punctuation\">(</span>Copias<span class=\"token punctuation\">,</span> <span class=\"token function\">vendio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Copias<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ListaCopias<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">sumlist</span><span class=\"token punctuation\">(</span>ListaCopias<span class=\"token punctuation\">,</span> TotalCopias<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>ListaCopias<span class=\"token punctuation\">,</span> Cantidad<span class=\"token punctuation\">)</span>\n    Promedio <span class=\"token operator\">is</span> TotalCopias<span class=\"token operator\">/</span>Cantidad<span class=\"token operator\">.</span></code></pre></div>\n<p>Y una soluci√≥n un poco m√°s declarativa podr√≠a ser delegando el <code class=\"language-text\">promedio</code> en otro predicado:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">promedioCopiasVendidas</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Promedio<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">findall</span><span class=\"token punctuation\">(</span>Copias<span class=\"token punctuation\">,</span> <span class=\"token function\">vendio</span><span class=\"token punctuation\">(</span>Autor<span class=\"token punctuation\">,</span> Copias<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ListaCopias<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">promedio</span><span class=\"token punctuation\">(</span>ListaCopias<span class=\"token punctuation\">,</span> Promedio<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n\n<span class=\"token function\">promedio</span><span class=\"token punctuation\">(</span>Lista<span class=\"token punctuation\">,</span> Promedio<span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>Lista<span class=\"token punctuation\">,</span> Cantidad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">sum_list</span><span class=\"token punctuation\">(</span>Lista<span class=\"token punctuation\">,</span> Suma<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    Promedio <span class=\"token operator\">is</span> Suma <span class=\"token operator\">/</span> Cantidad<span class=\"token operator\">.</span></code></pre></div>\n<h2 id=\"links-√∫tiles\" style=\"position:relative;\"><a href=\"#links-%C3%BAtiles\" aria-label=\"links √∫tiles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Links √∫tiles:</h2>\n<ul>\n<li><a href=\"https://github.com/pdep-lunes/pdep-clases-2023/blob/main/Logico/Clase03/clase03.pl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">C√≥digo de la clase</a> </li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/aritmetica-en-prolog.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Aritm√©tica/is</a></li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/paradigma-logico---listas.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Listas y findall</a></li>\n</ul>","frontmatter":{"title":"Listas, is y findall","date":"07-07-2025","description":"D√©cimo cuarta clase de PdeP","tags":["logico","is","listas","findall","ilogico"]}}},"pageContext":{"slug":"/2025/logico/clase-14/","previous":{"fields":{"slug":"/2025/logico/clase-13/"},"frontmatter":{"title":"Polimorfismo, functores, forall","date":"30-06-2025"}},"next":null}},
    "staticQueryHashes": ["452372368","63159454"]}