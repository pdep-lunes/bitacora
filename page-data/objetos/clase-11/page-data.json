{"componentChunkName":"component---src-templates-blog-post-js","path":"/objetos/clase-11/","webpackCompilationHash":"ec874b6458d0ae54d753","result":{"data":{"site":{"siteMetadata":{"title":"Bit√°cora","author":"pdep"}},"markdownRemark":{"id":"6c3d650c-20d5-5073-b869-940b84af0c88","excerpt":"¬øQu√© vimos hoy? As√≠ como en funcional ten√≠amos funciones y en l√≥gico ten√≠amos reglas l√≥gicas, como sugiere el nombre, en esta parte de la materia vamos a estar‚Ä¶","html":"<h2 id=\"¬øqu√©-vimos-hoy\"><a href=\"#%C2%BFqu%C3%A9-vimos-hoy\" aria-label=\"¬øqu√© vimos hoy permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>¬øQu√© vimos hoy?</h2>\n<p>As√≠ como en funcional ten√≠amos funciones y en l√≥gico ten√≠amos reglas l√≥gicas, como sugiere el nombre, en esta parte de la materia vamos a estar trabajando con objetos. Empecemos creando un objeto simple:</p>\n<p>Tenemos a Poroto, el perro de una familia üêï. Por lo pronto tenemos la siguiente informaci√≥n acerca de Poroto: tiene 4 a√±os y 100 de energ√≠a (porque todos los perros necesitan energ√≠a para hacer cosas, claro). Entonces, vamos a decir que poroto tiene como <strong>atributos</strong> edad y energ√≠a. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">object poroto {\n  var energia = 100\n  var edad = 4\n}</code></pre></div>\n<p>¬øY qu√© podemos hacer con poroto? Por ahora no mucho üòÖ. Estar√≠a bueno que sepa hacer m√°s cosas, como jugar. ¬øY c√≥mo hacemos que poroto juegue? ü§î Se lo tenemos que decir (poroto, jug√°! üó£Ô∏è) y la forma que tenemos para decirle a un objeto que haga algo es <strong>envi√°ndole un mensaje</strong>, y esto se hace as√≠:</p>\n<p><code class=\"language-text\">poroto.jugar()</code></p>\n<p>Los mensajes siempre son enviados a un objeto y son la manera de comunicarnos con los mismos.</p>\n<p>Si corremos el c√≥digo anterior, ¬øqu√© pasa?</p>\n<p><code class=\"language-text\">ERROR: poroto does not understand jugar() (line: 4)</code> üí•</p>\n<p>Claro, le dijimos a poroto que juegue, pero nunca le ‚Äúense√±amos‚Äù c√≥mo hacerlo üë®‚Äçüè´üë©‚Äçüè´. De alguna forma le tenemos que decir qu√© es lo que queremos que haga cuando le digamos que juegue, y esto lo hacemos con lo que llamamos un <strong>m√©todo</strong>. Repasando: un m√©todo es lo que un objeto hace cuando le enviamos un mensaje particular. Ense√±√©mosle entonces a poroto a jugar. Vamos a querer que cuando poroto juegue, su energ√≠a baje 20 unidades. Esto en el c√≥digo se escribe as√≠: üë®‚Äçüíªüë©‚Äçüíª</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">object poroto {\n  var energia = 100\n  var edad = 4\n\n  method jugar() {\n    energia = energia - 20 // o energia -= 20\n  }\n}</code></pre></div>\n<p>Buen√≠simo, ahora que poroto sabe jugar, enviemosle el mensaje de nuevo.</p>\n<p>Ahora queremos ver si su energ√≠a cambi√≥, por lo que deber√≠amos preguntarle a poroto cu√°l es su energ√≠a. Para esto vamos a tener que declarar un <em>getter</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">method energia() {\n  return energia\n}</code></pre></div>\n<p>Si quisi√©ramos cambiarla, har√≠amos un <em>setter</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">method energia(unaEnergia) {\n  energia = unaEnergia\n}</code></pre></div>\n<p>Este tipo de m√©todos en los que accedemos al valor de un atributo o lo modificamos se llaman <em>accessors</em>. No es necesario que todos los atributos tengan los suyos, s√≥lo aquellos que los necesitan.</p>\n<p>Ahora, vamos a crear otro objeto: vamos a crear al due√±o de poroto, Billy. De Billy conocemos su edad, su comida favorita, su energ√≠a y su mascota.\nSabemos que Billy puede jugar con poroto, entonces podemos hacer un m√©todo que sea <code class=\"language-text\">jugarConMascota</code>, el cual haga que Billy pierda 50 de energ√≠a (se cansa m√°s r√°pido que su perro) y tambi√©n hace que poroto juegue.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">object billy {\n  var edad = 12\n  const comidaFavorita = &quot;asado&quot;\n  var energia = 200\n  var mascota = poroto\n\n  method jugarConMascota() {\n    energia -= 50\n    mascota.jugar()\n  }\n\n  method mascota() {\n    return mascota;\n  }\n}</code></pre></div>\n<p>Como vemos ac√°, Billy le est√° mandando un mensaje a su mascota, que en este caso es poroto. Billy le dijo a su mascota jug√° y Poroto jug√≥.\nAhora agregamos a Mandy que tiene como mascota a su perra Sally que empieza con la misma energ√≠a y edad que poroto y pierde la misma energ√≠a al jugar. Hacemos que mandy juegue con su mascota dejando a Sally con el mismo estado que Poroto.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">object mandy {\n   var edad = 15\n   const comidaFavorita = &quot;milanesa&quot;\n   var energia = 200\n   var mascota = sally\n\n  method jugarConMascota() {\n    energia -= 30\n    mascota.jugar()\n  }\n \n  method mascota() {\n    return mascota;\n  }\n}\n\nobject sally {\n  var energia = 100\n  var edad = 4\n\n  method jugar() {\n    energia = energia - 20\n  }\n}</code></pre></div>\n<h2 id=\"links-√∫tiles\"><a href=\"#links-%C3%BAtiles\" aria-label=\"links √∫tiles permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Links √∫tiles:</h2>\n<ul>\n<li><a href=\"https://github.com/pdep-lunes/clase1-objetos-2020\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">C√≥digo de la clase</a></li>\n<li><a href=\"https://drive.google.com/file/d/1n86oHvWveNmiK6j91OkqOLm7d8m2MMt5/view\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video de la clase</a></li>\n</ul>","frontmatter":{"title":"Onceava clase","date":"10-08-2020","description":"Onceava clase de PdeP","tags":["objetos","introducci√≥n","atributos","accessors","mensaje","m√©todo"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/objetos/clase-11/","previous":{"fields":{"slug":"/logico/clase-10/"},"frontmatter":{"title":"D√©cima clase"}},"next":{"fields":{"slug":"/objetos/clase-12/"},"frontmatter":{"title":"Doceava clase"}}}}}