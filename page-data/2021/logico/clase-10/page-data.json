{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/logico/clase-10/","result":{"data":{"site":{"siteMetadata":{"title":"Bit√°cora","author":"pdep"}},"markdownRemark":{"id":"8efc6128-677f-5b68-be8f-90af3c3c7751","excerpt":"¬øQu√© vimos hoy? Forall Functores is Pattern Matching Polimorfismo Forall Hasta ahora, estuvimos trabajando con cuantificadores existenciales, es decir, todas‚Ä¶","html":"<h2 id=\"¬øqu√©-vimos-hoy\" style=\"position:relative;\"><a href=\"#%C2%BFqu%C3%A9-vimos-hoy\" aria-label=\"¬øqu√© vimos hoy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>¬øQu√© vimos hoy?</h2>\n<ul>\n<li>Forall</li>\n<li>Functores</li>\n<li>is</li>\n<li>Pattern Matching</li>\n<li>Polimorfismo</li>\n</ul>\n<h2 id=\"forall\" style=\"position:relative;\"><a href=\"#forall\" aria-label=\"forall permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Forall</h2>\n<p>Hasta ahora, estuvimos trabajando con <strong>cuantificadores existenciales</strong>, es decir, todas nuestras consultas eran del tipo:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">‚àÉx / p(x) =&gt; q(x)</code></pre></div>\n<p>Pero, sabemos que hay otro cuantificador, el <em>universal</em>. ¬øY c√≥mo podemos trabajar con este cuantificador? üëÄ</p>\n<p>Vamos a utilizar el predicado de orden superior <code class=\"language-text\">forall/2</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">forall</span><span class=\"token punctuation\">(</span>antecedente<span class=\"token punctuation\">,</span> consecuente<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Para que el <code class=\"language-text\">forall</code> responda verdadero, tiene que ocurrir que <strong>para todo antecedente que ocurra, su consecuente ocurre</strong>.</p>\n<p>Por ejemplo, al definir el predicado <code class=\"language-text\">soloEscribioComics/1</code> nos responde si todas las obras que alguien escribi√≥ son c√≥mics.</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">soloEscribioComics</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Artista</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:-</span>\n    <span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Artista</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">forall</span><span class=\"token punctuation\">(</span><span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Artista</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Obra</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">esComic</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Cuidado, ya que forall no es conmutativo, si por ejemplo hici√©semos:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">forall</span><span class=\"token punctuation\">(</span><span class=\"token function\">esComic</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Artista</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Obra</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Esto, a diferencia de lo que hicimos en <code class=\"language-text\">soloEscribioComics</code>, significa que para todo c√≥mic que existe lo escribi√≥ ese Artista.</p>\n<p>Al igual que <code class=\"language-text\">not</code>, el <code class=\"language-text\">forall</code> es un  predicado de orden superior ya que recibe predicados por par√°metro. ¬øY por qu√© ligamos al <code class=\"language-text\">Artista</code> antes de entrar al <code class=\"language-text\">forall</code>? Porque, siguiendo con las similitudes con el <code class=\"language-text\">not</code>, <code class=\"language-text\">forall</code> no liga variables. Es por este motivo que tenemos que <em>‚Äúgenerar‚Äù</em> al <code class=\"language-text\">Artista</code> antes de entrar al <code class=\"language-text\">forall</code> pero teniendo la precauci√≥n de no ligar la <code class=\"language-text\">Obra</code>, ya que queremos <strong>todas</strong> las obras de <strong>un</strong> artista.</p>\n<h2 id=\"functores\" style=\"position:relative;\"><a href=\"#functores\" aria-label=\"functores permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Functores</h2>\n<p>Hasta ahora, en l√≥gico siempre hicimos consultas en las cuales nuestros individuos eran simples.\nPero adem√°s de los individuos simples, tambi√©n existen los <strong>individuos complejos</strong>. üßê\nLos <em>functores</em> son individuos complejos y tienen:</p>\n<ul>\n<li>Un nombre, o etiqueta, que los identifica.</li>\n<li>Una aridad.</li>\n</ul>\n<p>En nuestra base de conocimientos ten√≠amos obras, ahora conocemos los tipos de obras, que pueden ser:</p>\n<ul>\n<li><code class=\"language-text\">novela(Genero, CantidadDeCapitulos)</code></li>\n<li><code class=\"language-text\">libroDeCuentos(CantidadDeCuentos)</code></li>\n<li><code class=\"language-text\">cientifico(Disciplina)</code> </li>\n<li><code class=\"language-text\">bestSeller(Precio, CantidadDePaginas)</code></li>\n</ul>\n<p>Adem√°s contamos con un predicado <code class=\"language-text\">esDeTipo/2</code> que relaciona a cada obras con su tipo.</p>\n<p>Ahora queremos saber si una obra est√° buena, esto se cumple cuando:</p>\n<ul>\n<li>Es una novela policial y tiene menos de 12 cap√≠tulos.</li>\n<li>Es una novela de terror.</li>\n<li>Los libros con m√°s de 10 cuentos siempre son buenos.</li>\n<li>Es un libro cient√≠fico de fisicaCuantica.</li>\n<li>Es un best seller y el precio por p√°gina es menor a $50.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">estaBuena</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">esDeTipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">,</span> <span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>policial<span class=\"token punctuation\">,</span> <span class=\"token variable\">Capitulos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">Capitulos</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">12.</span>\n<span class=\"token function\">estaBuena</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">esDeTipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">,</span> <span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>terror<span class=\"token punctuation\">,</span> <span class=\"token variable\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token function\">estaBuena</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">esDeTipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">,</span> <span class=\"token function\">libroDeCuentos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CantidadDeCuentos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">CantidadDeCuentos</span> <span class=\"token operator\">></span> <span class=\"token number\">10.</span>\n<span class=\"token function\">estaBuena</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">esDeTipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">,</span> <span class=\"token function\">cientifico</span><span class=\"token punctuation\">(</span>fisicaCuantica<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token function\">estaBuena</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">esDeTipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">,</span> <span class=\"token function\">bestSeller</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Precio</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Paginas</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">Precio</span> <span class=\"token operator\">/</span> <span class=\"token variable\">Paginas</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">50.</span></code></pre></div>\n<blockquote>\n<p>Si bien los functores se escriben como un predicado, <strong>NO</strong> son un predicado. Como ven, los estamos usando como par√°metro en nuestras consultas.</p>\n</blockquote>\n<p>Ahora, mirando üî≠ un poco a nuestro c√≥digo anterior, podemos ver l√≥gica repetida y eso no nos gusta mucho. üëé</p>\n<p>Veamos c√≥mo podr√≠amos cambiar esto‚Ä¶</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">estaBuena</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">esDeTipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Tipo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Tipo</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n\n<span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>policial<span class=\"token punctuation\">,</span> <span class=\"token variable\">Capitulos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token variable\">Capitulos</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">12.</span>\n<span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>terror<span class=\"token punctuation\">,</span> <span class=\"token variable\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">libroDeCuentos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CantidadDeCuentos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token variable\">CantidadDeCuentos</span> <span class=\"token operator\">></span> <span class=\"token number\">10.</span>\n<span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">cientifico</span><span class=\"token punctuation\">(</span>fisicaCuantica<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">bestSeller</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Precio</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Paginas</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token variable\">Precio</span> <span class=\"token operator\">/</span> <span class=\"token variable\">Paginas</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">50.</span></code></pre></div>\n<p>Tenemos un par de cosas interesantes aqu√≠. ü§î</p>\n<p>Primero, si prestamos atenci√≥n a c√≥mo definimos el predicado <code class=\"language-text\">esTipoCopado</code>, podemos ver que estamos <strong>deconstruyendo</strong> (o abriendo) a los functores que representan el tipo de las obras.<br>\nPor ejemplo, en esta cla√∫sula, el tipo va a unificar s√≥lo con aquellas novelas que sean policiales.</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>policial<span class=\"token punctuation\">,</span> <span class=\"token variable\">Capitulos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token variable\">Capitulos</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">12.</span>\n<span class=\"token comment\">% adem√°s la variable Capitulos va a unificar</span>\n<span class=\"token comment\">% con la cantidad de cap√≠tulos de esa novela</span></code></pre></div>\n<p>Adem√°s, cada functor va a ‚Äúsaber‚Äù con qu√© cla√∫sula del predicado quedarse.<br>\nTodo esto gracias a que tenemos <em>Pattern Matching</em>. üéâ</p>\n<p>En segundo lugar, podemos ver como al predicado <code class=\"language-text\">tipoCopado</code> no le importa para nada que <em>forma</em> puede llegar a tener el functor del tipo de la obra.<br>\nAl hecho de tratar variables indistintamente de su forma lo llamamos <strong>polimorfismo</strong> üíó y va a ser un concepto muy importante y √∫til desde ahora hasta siempre. üò±</p>\n<h2 id=\"is\" style=\"position:relative;\"><a href=\"#is\" aria-label=\"is permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>is</h2>\n<p><code class=\"language-text\">is</code> es un predicado que relaciona a una cuenta <em>(a la derecha)</em> con su resultado <em>(a la izquierda)</em>. Es inversible para el resultado: liga la variable del <code class=\"language-text\">Resultado</code> al resultado de la expresi√≥n matem√°tica de la derecha.</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token variable\">Resultado</span> <span class=\"token operator\">is</span> <span class=\"token variable\">ExpresionMatematica</span></code></pre></div>\n<p>Entonces:</p>\n<ul>\n<li>¬øCu√°ndo usamos <code class=\"language-text\">is</code>?<br>\nBueno, <strong>solamente</strong> cuando necesitamos realizar cuentas que tienen sentido.</li>\n<li>¬øY en en d√≥nde m√°s?<br>\nEn ning√∫n otro caso. Usar <code class=\"language-text\">is</code> s√≥lo para ligar variables est√° <strong>MAL</strong> y nadie quisiera reprobar su parcial de l√≥gico por eso. üëÆüèª‚Äç</li>\n</ul>\n<p>En la clase lo utilizamos cuando hicimos <code class=\"language-text\">cantidadDePaginas</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">cantidadDePaginas</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">CantidadDePaginas</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:-</span> \n\t<span class=\"token function\">esDeTipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Obra</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Tipo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">paginasPorTipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Tipo</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">CantidadDePaginas</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n\n<span class=\"token function\">paginasPorTipo</span><span class=\"token punctuation\">(</span><span class=\"token function\">novela</span><span class=\"token punctuation\">(</span><span class=\"token variable\">_</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">CantidadDeCapitulos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">CantidadDePaginas</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n\t<span class=\"token variable\">CantidadDePaginas</span> <span class=\"token operator\">is</span> <span class=\"token variable\">CantidadDeCapitulos</span> <span class=\"token operator\">*</span> <span class=\"token number\">20.</span>\n\n<span class=\"token function\">paginasPorTipo</span><span class=\"token punctuation\">(</span><span class=\"token function\">libroDeCuentos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CantidadDeCuentos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">CantidadDePaginas</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n\t<span class=\"token variable\">CantidadDePaginas</span> <span class=\"token operator\">is</span> <span class=\"token variable\">CantidadDeCuentos</span> <span class=\"token operator\">*</span> <span class=\"token number\">5.</span>\n\n<span class=\"token function\">paginasPorTipo</span><span class=\"token punctuation\">(</span><span class=\"token function\">cientifico</span><span class=\"token punctuation\">(</span><span class=\"token variable\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n\n<span class=\"token function\">paginasPorTipo</span><span class=\"token punctuation\">(</span><span class=\"token function\">bestSeller</span><span class=\"token punctuation\">(</span><span class=\"token variable\">_</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">CantidadDePaginas</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">CantidadDePaginas</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Pero fijate que solo lo utilizamos en las novelas y en los libros de cuentos. Para los best seller y los libros cient√≠ficos usamos Pattern Matching ¬°porque no hab√≠a cuentas!</p>\n<h2 id=\"links-√∫tiles\" style=\"position:relative;\"><a href=\"#links-%C3%BAtiles\" aria-label=\"links √∫tiles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Links √∫tiles:</h2>\n<ul>\n<li><a href=\"https://drive.google.com/file/d/1UQ7nDRmIqJhgj3xDexiLfoWZqwqnVuT-/view?usp=sharing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video de la clase de hoy</a></li>\n<li><a href=\"https://github.com/pdep-lunes/pdep-clases-2021/blob/master/logico/clase-13.pl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">C√≥digo de la clase de hoy</a></li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/paradigma-logico---generacion.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Generaci√≥n</a></li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/paradigma-logico---existe-vs-para-todo.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Forall</a></li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/paradigma-logico---functores.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Functores</a></li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/polimorfismo-en-el-paradigma-logico.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Polimorfismo</a></li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/aritmetica-en-prolog.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Aritm√©tica/is</a></li>\n</ul>","frontmatter":{"title":"D√©cima clase","date":"05-07-2021","description":"D√©cima clase de PdeP","tags":["forall","functores","is","pattern-matching","polimorfismo"]}}},"pageContext":{"slug":"/2021/logico/clase-10/","previous":{"fields":{"slug":"/2021/logico/clase-09/"},"frontmatter":{"title":"Novena clase","date":"27-06-2021"}},"next":null}},"staticQueryHashes":["452372368","63159454"]}