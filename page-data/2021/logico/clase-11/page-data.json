{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/logico/clase-11/","result":{"data":{"site":{"siteMetadata":{"title":"Bit√°cora","author":"pdep"}},"markdownRemark":{"id":"d40e978d-fe46-5ec4-b82a-cd63e5d1dc09","excerpt":"Tarea: Realizar el TP grupal para el primer lunes pos vacaciones (09/08). ¬øQu√© vimos hoy? Listas findall findall y listas Ahora queremos saber el puntaje de un‚Ä¶","html":"<h2 id=\"tarea\" style=\"position:relative;\"><a href=\"#tarea\" aria-label=\"tarea permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tarea:</h2>\n<ul>\n<li>Realizar el <a href=\"https://docs.google.com/document/d/1bmljMbzGNfL5GyO_UC4QgqwcB-GfUAecW_ifXO36ltM/edit?usp=sharing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TP grupal</a> para el primer lunes pos vacaciones (09/08).</li>\n</ul>\n<h2 id=\"¬øqu√©-vimos-hoy\" style=\"position:relative;\"><a href=\"#%C2%BFqu%C3%A9-vimos-hoy\" aria-label=\"¬øqu√© vimos hoy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>¬øQu√© vimos hoy?</h2>\n<ul>\n<li>Listas</li>\n<li>findall</li>\n</ul>\n<h2 id=\"findall-y-listas\" style=\"position:relative;\"><a href=\"#findall-y-listas\" aria-label=\"findall y listas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>findall y listas</h2>\n<p>Ahora queremos saber el puntaje de un autor, este se calcula como <code class=\"language-text\">3 * cantidad de obras best seller que escribi√≥.</code></p>\n<p>Recordemos, que en nuestra base de conocimientos, contamos con un predicado <code class=\"language-text\">esBestSeller/1</code> que nos dice si una obra es best seller.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">esBestSeller(UnaObra) :-\n  copiasVendidas(UnaObra, CantidadVendida),\n  CantidadVendida &gt; 50000.</code></pre></div>\n<p>Por ende, podemos arrancar escribiendo un predicado que nos diga las obras que escribi√≥ un autor que son best sellers:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">escribioBestSeller(Autor, Obra):-\n    escribio(Autor, Obra),\n    esBestSeller(Obra).</code></pre></div>\n<p>Y en nuestra consola podemos hacer consultas como esta:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">escribioLibroBestSeller(Artista, Obra).\nArtista = elsaBornemann,\nObra = socorro ;\nArtista = neilGaiman,\nObra = sandman ;\nArtista = alanMoore,\nObra = watchmen ;\nArtista = brianAzarello,\nObra = cienBalas ;\nArtista = frankMiller,\nObra = elCaballeroOscuroRegresa ;\nArtista = frankMiller,\nObra = batmanAnioUno ;\n...</code></pre></div>\n<p>Si bien, como <code class=\"language-text\">escribioBestSeller</code> es inversible, podemos consultar por los valores que puede tomar la variable Obra. ¬øPero c√≥mo podr√≠amos trabajar con todas las obras best seller que escribi√≥ un autor al mismo tiempo? Bueno, ¬°podr√≠amos agruparlo en una lista!</p>\n<p>Para lograr esto contamos con un predicado llamado <code class=\"language-text\">findall/3</code>. Este se escribe de la forma <code class=\"language-text\">findall(Formato, Consulta, Lista)</code> y es inversible para su √∫ltimo argumento. Al igual que forall, findall es un predicado de orden superior, ya que su segundo par√°metro es una consulta. La idea del findall es generar los individuos que cumplan con la consulta y agruparlos en una lista.  </p>\n<p>Entonces, ahora podr√≠amos escribir un predicado <code class=\"language-text\">obrasBestSellerQueEscribio/2</code> que relacione a un autor con todos las obras que escribi√≥ y que adem√°s son best sellers.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">obrasBestSellerQueEscribio(Autor, Obras):-\n    escribio(Autor, _),\n    findall(Obra, escribioBestSeller(Autor, Obra), Obras).</code></pre></div>\n<p>Y podemos consultar:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">?- obrasBestSellerQueEscribio(Artista, Obras).\nArtista = elsaBornemann,\nObras = [socorro] ;\nArtista = neilGaiman,\nObras = [sandman, americanGods, buenosPresagios] ;\nArtista = alanMoore,\n...</code></pre></div>\n<p>Ahora, la cantidad de obras best seller que escribi√≥ ese autor ser√≠a el tama√±o de esa lista.\nY bueno, ¬øc√≥mo creen que prolog podr√≠a relacionar a una lista con su tama√±o?\nS√≠, ¬°con un predicado ü§©! Contamos con <code class=\"language-text\">length(Lista, Tamanio)</code>, que es inversible para el tama√±o.</p>\n<p>Entonces podr√≠amos escribir:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cantidadDeObrasBestSeller(Autor, Cantidad):-\n    obrasBestSellerQueEscribio(Autor, UnasObras),\n    length(UnasObras, Cantidad).</code></pre></div>\n<p>Y ahora, por fin, ya podemos resolver nuestro problema inicial üòù:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">puntaje(Autor, Puntaje):-\n    cantidadDeObrasBestSeller(Autor, Cantidad),\n    Puntaje is 3 * Cantidad.</code></pre></div>\n<p>Volamos un segundo a analizar <code class=\"language-text\">obrasBestSellerQueEscribio</code>. ¬øPor qu√© es necesario generar al autor? Probemos qu√© pasa sin generarlo:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">?- obrasBestSellerQueEscribio(Autor, Obras).\nObras = [socorro, sandman, watchmen, cienBalas, elCaballeroOscuroRegresa, batmanAnioUno, americanGods, buenosPresagios, buenosPresagios|...].</code></pre></div>\n<p>¬øQu√© es lo que estamos haciendo mal? Al no ligar la variable autor a cada uno de los individuos, la pregunta que estamos haciendo en este caso es: ¬øCu√°les son obras best seller? cuando lo que realmente se quiere lograr es ¬øCu√°les son obra best seller de cada Autor?</p>\n<p>En el segundo par√°metro del findall, podemos llegar a necesitar consultas m√°s complejas. Por ejemplo, adem√°s de best sellers queremos que tambi√©n le gusten a gus, por lo que vamos a hacer obrasBestSellerQueEscribioQueLeGustanAGus ü•µ:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">obrasBestSellerQueEscribioQueLeGustanAGus(Autor, Obras):-\n    escribio(Autor, _),\n    findall(Obra, (escribioBestSeller(Autor, Obra), leGustaAGus(Obra)), Obras).</code></pre></div>\n<p>Es importante ver que muy probablemente si tenemos consultas compuestas en un findall, nos convendr√≠a delegar en una consulta que las abarque a ambas:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">obrasBestSellerQueEscribioQueLeGustanAGus(Autor, Obras):-\n    escribio(Autor, _),\n    findall(Obra, esBestSellerDelGustoDeGus(Autor, Obra), Obras).\n\nesBestSellerDelGustoDeGus(Autor, Obra):-\n\tescribioBestSeller(Autor, Obra), \n\tleGustaA(gus, Obra).</code></pre></div>\n<p>Adem√°s de poder generar conjuntos, tambi√©n podemos utilizar listas con individuos dentro de nuestro modelado. Para mostrar esto, vamos a introducir las obras fant√°sticas, las cu√°les cuentan con un conjunto de elementos m√°gicos. Agreguemos el nuevo tipo de obra:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">%fantastica(ElementosM√°gicos)\nesDeTipo(sandman, fantastica([yelmo, bolsaDeArena, rubi])).</code></pre></div>\n<p>Vamos a agregar un nuevo tipo copado para las obras fant√°sticas: aquellas obras que tengan un rubi. ¬øC√≥mo podemos saber si una lista incluye un elemento? Tan simple como usar el predicado <code class=\"language-text\">member/2</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">esTipoCopado(fantastica(ElementosMagicos)):-\n  member(rubi, ElementosMagicos).</code></pre></div>\n<p>Es importante tener cuidado con el uso de member. Un cl√°sico error del paradigma l√≥gico es utilizar un member con un conjunto armado con un findall. Cuando queremos utilizar un findall para tener un conjunto, nunca deber√≠amos querer saber si un elemento est√° dentro de ese conjunto ya que cont√°bamos con la condici√≥n para saberlo previamente. Sigamos el siguiente ejemplo: quiero saber si una obra es best seller del gusto de gus:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">obrasBestSellerQueEscribioQueLeGustanAGus(Autor, Obras):-\n    escribio(Autor, _),\n    findall(Obra, (esBestSeller(Autor, Obra), leGustaA(gus, Obra)), Obras).\n\nesBestSellerDelGustoDeGus(Obra):-\n  obrasBestSellerQueEscribioQueLeGustanAGus(_, Obras),\n  member(Obra, Obras).</code></pre></div>\n<p>Este modelo es incorrecto conceptualmente: estamos armando una lista para preguntar si un elemento est√° en la misma cuando pod√≠amos resolver directamente con una consulta:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">esBestSellerDelGustoDeGus(Obra):-\n  esBestSeller(Obra),\n  leGustaA(gus, Obra).</code></pre></div>\n<p>No necesit√°bamos una lista para poder cumplir el requerimiento. En este caso, nuestra soluci√≥n es mucho m√°s declarativa. </p>\n<p>Para terminar de aclarar los conceptos, vamos a realizar otro ejercicio. Queremos saber el promedio de copias que vendi√≥ un autor en toda su vida. Para ello, podemos empezar armando un predicado que relacione un autor con cada cantidad de copias vendida por obra:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">vendio(Autor, Copias):-\n    escribio(Autor, Obra),\n    copiasVendidas(Obra, Copias).</code></pre></div>\n<p>Con esta informaci√≥n podemos armar el conjunto de copias vendidas de cada autor. ¬øY c√≥mo sumamos la lista para obtener el promedio? ¬°F√°cil! Prolog nos da <code class=\"language-text\">sum_list</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">promedioCopiasVendidas(Autor, Promedio):-\n    escribio(Autor, _),\n    findall(Copias, vendio(Autor, Copias), ListaCopias),\n    sum_list(ListaCopias, TotalCopias)\n    length(ListaCopias, Cantidad)\n    Promedio is TotalCopias/Cantidad.</code></pre></div>\n<h2 id=\"links-√∫tiles\" style=\"position:relative;\"><a href=\"#links-%C3%BAtiles\" aria-label=\"links √∫tiles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Links √∫tiles:</h2>\n<ul>\n<li><a href=\"https://github.com/pdep-lunes/pdep-clases-2021/blob/master/logico/clase-14.pl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">C√≥digo de la clase</a></li>\n<li><a href=\"https://drive.google.com/file/d/1wid_c8KD326sLNRwX0JBRc8ObzHO2oez/view?usp=sharing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video de la clase</a></li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/paradigma-logico---listas.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Listas y findall</a></li>\n</ul>","frontmatter":{"title":"D√©cimo primera clase","date":"12-07-2021","description":"D√©cimo primera clase de PdeP'","tags":["logico","listas","findall"]}}},"pageContext":{"slug":"/2021/logico/clase-11/","previous":{"fields":{"slug":"/2021/logico/clase-10/"},"frontmatter":{"title":"D√©cima clase","date":"05-07-2021"}},"next":{"fields":{"slug":"/2021/logico/clase-12/"},"frontmatter":{"title":"D√©cimo segunda clase","date":"09-08-2021"}}}},"staticQueryHashes":["452372368","63159454"]}