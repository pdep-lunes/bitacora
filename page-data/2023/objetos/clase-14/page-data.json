{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2023/objetos/clase-14/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Bit√°cora","author":"pdep"}},"markdownRemark":{"id":"efad1dad-1d76-5aff-9aeb-4ad7fbb40f75","excerpt":"¬øQu√© vimos hoy? As√≠ como en funcional ten√≠amos funciones y en l√≥gico ten√≠amos reglas l√≥gicas, como sugiere el nombre, en esta parte de la materia vamos a estar‚Ä¶","html":"<h2 id=\"qu√©-vimos-hoy\" style=\"position:relative;\"><a href=\"#qu%C3%A9-vimos-hoy\" aria-label=\"qu√© vimos hoy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>¬øQu√© vimos hoy?</h2>\n<p>As√≠ como en funcional ten√≠amos funciones y en l√≥gico ten√≠amos reglas l√≥gicas, como sugiere el nombre, en esta parte de la materia vamos a estar trabajando con objetos. Empecemos creando un objeto simple:</p>\n<p>Tenemos a Poroto, el perro de una familia üêï. Por lo pronto tenemos la siguiente informaci√≥n acerca de Poroto: es un perro Salchicha con 500 de energ√≠a (porque todos los perros necesitan energ√≠a para hacer cosas, claro). Entonces, vamos a decir que poroto tiene como <strong>atributos</strong> raza y energ√≠a. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">object poroto {\n  var energia = 500\n  const raza = \"Salchicha\"\n}</code></pre></div>\n<p>¬øY qu√© podemos hacer con poroto? Por ahora no mucho üòÖ. Estar√≠a bueno que sepa hacer m√°s cosas, como jugar. ¬øY c√≥mo hacemos que poroto juegue? ü§î Se lo tenemos que decir (poroto, jug√°! üó£Ô∏è) y la forma que tenemos para decirle a un objeto que haga algo es <strong>envi√°ndole un mensaje</strong>, y esto se hace as√≠:</p>\n<p><code class=\"language-text\">poroto.jugar()</code></p>\n<p>Los mensajes siempre son enviados a un objeto y son la manera de comunicarnos con los mismos.</p>\n<p>Si corremos el c√≥digo anterior, ¬øqu√© pasa?</p>\n<p><code class=\"language-text\">ERROR: poroto does not understand jugar() (line: 4)</code> üí•</p>\n<p>Claro, le dijimos a poroto que juegue, pero nunca le ‚Äúense√±amos‚Äù c√≥mo hacerlo. De alguna forma le tenemos que decir qu√© es lo que queremos que haga cuando le digamos que juegue, y esto lo hacemos con lo que llamamos un <strong>m√©todo</strong>. Repasando: un m√©todo es lo que un objeto hace cuando le enviamos un mensaje particular. Ense√±√©mosle entonces a <code class=\"language-text\">poroto</code> a jugar. Vamos a querer que cuando <code class=\"language-text\">poroto</code> juegue, su energ√≠a baje 20 unidades. Esto en el c√≥digo se escribe as√≠: üë®‚Äçüíªüë©‚Äçüíª</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">object poroto {\n  var energia = 100\n  const raza = \"Salchicha\"\n\n  method jugar() {\n    energia = energia - 20 // o energia -= 20\n  }\n}</code></pre></div>\n<p>Buen√≠simo, ahora que <code class=\"language-text\">poroto</code> sabe jugar, enviemosle el mensaje de nuevo.</p>\n<p>Ahora queremos ver si su energ√≠a cambi√≥, por lo que deber√≠amos preguntarle a poroto cu√°l es su energ√≠a. Para esto vamos a tener que declarar un <em>getter</em>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">method energia() {\n  return energia\n}</code></pre></div>\n<p>Si quisi√©ramos cambiarla, har√≠amos un <em>setter</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">method energia(unaEnergia) {\n  energia = unaEnergia\n}</code></pre></div>\n<p>Este tipo de m√©todos en los que accedemos al valor de un atributo o lo modificamos se llaman <em>accessors</em>. No es necesario que todos los atributos tengan los suyos, s√≥lo aquellos que los necesitan.</p>\n<p>Por otro lado, como todo buen perro, <code class=\"language-text\">poroto</code> tiene un ladrido. Para ello crearemos el m√©todo ladrido que retorna ‚Äú¬°Guau!‚Äù</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">method ladrido() {\n  return \"¬°Guau!\"\n}</code></pre></div>\n<p>La principal diferencia entre m√©todos como <code class=\"language-text\">ladrido</code> y <code class=\"language-text\">jugar</code> es que el primero retorna un valor mientras que el segundo tiene efecto de lado, es decir, modifica el estado de nuestro objeto. Es muy importante mantener diferenciados estos dos tipos y no definir comportamiento que tenga efecto y retorne en un mismo m√©todo.</p>\n<p>Ahora, vamos a crear otro objeto: vamos a crear al due√±o de poroto, Billy. De Billy conocemos su alegr√≠a y su mascota.\nSabemos que Billy puede jugar con Poroto, entonces podemos hacer un m√©todo que sea <code class=\"language-text\">jugarConSuMascota</code>, el cual haga que Billy gane 50 de alegr√≠a y tambi√©n hace que su mascota juegue.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">object billy {\n  const nombre = \"William\"\n  var alegria = 200\n  var mascota = poroto\n\n  method jugarConSuMascota() {\n    alegria += 50\n    mascota.jugar()\n  }\n}</code></pre></div>\n<p>Como vemos ac√°, Billy le est√° mandando un mensaje a su mascota, que en este caso es Poroto. Billy le dijo a su mascota jug√° y Poroto jug√≥.\nAhora agregamos a Mandy que tiene como mascota a su perra Sally que pierde la misma energ√≠a al jugar que Poroto. Al jugar, Mandy gana 100 de alegr√≠a y hace que su mascota juegue dos veces.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">object mandy {\n   const nombre = \"Magdalena\"\n   var alegria = 200\n   var mascota = sally\n\n  method jugar() {\n    alegria += 100\n    mascota.jugar()\n    mascota.jugar()\n  }\n}\n\nobject sally {\n  var energia = 100\n  var raza = \"Caniche\"\n\n  method jugar() {\n    energia = energia - 20\n  }\n\n  method ladrido() {\n    return \"¬°Miau!\"\n  }\n}</code></pre></div>\n<h3 id=\"identidad-vs-igualdad\" style=\"position:relative;\"><a href=\"#identidad-vs-igualdad\" aria-label=\"identidad vs igualdad permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Identidad vs Igualdad</h3>\n<p><strong>Identidad</strong>: decimos que dos objetos son id√©nticos si son el mismo objeto. Dentro del ambiente podemos tener dos referencias diferentes al mismo objeto. En Wollok el operador usado para comparar dos objetos por identidad es <code class=\"language-text\">===</code>.</p>\n<p><strong>Igualdad</strong>: (o equivalencia) por defecto dos objetos son iguales si son id√©nticos, o sea si son el mismo objeto. Al mismo tiempo dos objetos que no son id√©nticos pueden ser iguales.  En Wollok el operador usado para comparar dos objetos por igualdad es <code class=\"language-text\">==</code>.</p>\n<p>Esta diferencia la vimos con el ejemplo de los objetos strings <code class=\"language-text\">\"Salchicha\"</code> ya que, por c√≥mo est√° implementado Wollok, por m√°s que escribamos dos strings <em>iguales</em>, no son <em>id√©nticos</em> (no son el mismo objeto):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token string\">\"Salchicha\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"Salchicha\"</span>\n<span class=\"token boolean\">true</span> <span class=\"token comment\">//porque es cierto que el string \"Salchicha\" es igual (o equivalente) a otro string \"Salchicha\"</span>\n<span class=\"token operator\">></span> <span class=\"token string\">\"Salchicha\"</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"Salchicha\"</span>\n<span class=\"token boolean\">false</span> <span class=\"token comment\">//porque no son el mismo objeto</span></code></pre></div>\n<h2 id=\"links-√∫tiles\" style=\"position:relative;\"><a href=\"#links-%C3%BAtiles\" aria-label=\"links √∫tiles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Links √∫tiles</h2>\n<ul>\n<li><a href=\"https://github.com/pdep-lunes/pdep-clases-2023/blob/main/Objetos/Clase01/src/Clase01.wlk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">C√≥digo de la clase</a></li>\n<li>En la p√°gina de pdep y en la documentaci√≥n de Wollok van a encontrar mucho material √∫til.</li>\n</ul>","frontmatter":{"title":"D√©cimo cuarta clase","date":"28-08-2023","description":"D√©cimo cuarta clase de PdeP","tags":["objetos","introducci√≥n","atributos","accessors","mensaje","m√©todo","identidad"]}}},"pageContext":{"slug":"/2023/objetos/clase-14/","previous":{"fields":{"slug":"/2023/logico/clase-13/"},"frontmatter":{"title":"D√©cimo tercera clase","date":"10-07-2023"}},"next":{"fields":{"slug":"/2023/objetos/clase-15/"},"frontmatter":{"title":"D√©cimo quinta clase","date":"04-09-2023"}}}},
    "staticQueryHashes": ["452372368","63159454"]}