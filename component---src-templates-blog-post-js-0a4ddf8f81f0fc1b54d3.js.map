{"version":3,"sources":["webpack://pdep-lunes-bitacora/./src/components/retomar-scroll-tooltip.js","webpack://pdep-lunes-bitacora/./src/templates/blog-post.js"],"names":["postTitle","React","showTooltip","setShowTooltip","interval","useRef","savePostScrolling","current","setInterval","localStorage","setItem","window","scrollY","useEffect","lastScroll","parseInt","getItem","removeItem","clearInterval","onClick","option","top","scrollTo","behavior","id","style","opacity","display","className","render","post","this","props","data","markdownRemark","frontmatter","title","tags","description","date","siteTitle","site","siteMetadata","pageContext","previous","next","YYYY","getYearAsNumber","location","excerpt","marginTop","rhythm","map","tag","i","key","scale","marginBottom","dateParser","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"mappings":"yQA6DA,EAzD6B,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UAAgB,EACRC,YAAe,GAA9CC,EADuC,KAC1BC,EAD0B,KAGxCC,GAAWC,YAAO,MAExB,SAASC,EAAkBN,GACzBI,EAASG,QAAUC,aAAY,WAC7BC,aAAaC,QAAQV,EAAWW,OAAOC,WACtC,MAGLC,gBAAU,WACR,IAAMC,EAAaC,SAASN,aAAaO,QAAQhB,IAWjD,OATsC,OAApCS,aAAaO,QAAQhB,IACrBc,EAAa,KACbH,OAAOC,QAAUE,EAAa,IAE9BX,GAAe,IAEfM,aAAaQ,WAAWjB,GACxBM,EAAkBN,IAEb,WACLkB,cAAcd,EAASG,YAExB,CAACP,EAAWI,IAEf,IAAMe,EAAU,SAACC,GAAD,OAA0B,WAExC,GADAjB,GAAe,GACA,OAAXiB,EAAiB,CACnB,IAAMC,EAAMN,SAASN,aAAaO,QAAQhB,IAC1CW,OAAOW,SAAS,CAAEC,SAAU,SAAUF,QAExCf,EAAkBN,KAGpB,OACE,uBACEwB,GAAG,UACHC,MAAO,CACLC,QAASxB,EAAc,IAAM,IAC7ByB,QAASzB,EAAc,QAAU,SAGnC,uBAAK0B,UAAU,UACf,uBAAKA,UAAU,QACb,iEACA,uBAAKA,UAAU,WACb,wBAAMT,QAASA,EAAQ,OAAvB,MACA,wBAAMA,QAASA,EAAQ,OAAvB,UC2BV,E,6FApEEU,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eADtB,EAE+CJ,EAAKK,YAA5CnC,EAFR,EAECoC,MAAkBC,EAFnB,EAEmBA,KAAMC,EAFzB,EAEyBA,YAAaC,EAFtC,EAEsCA,KACvCC,EAAYT,KAAKC,MAAMC,KAAKQ,KAAKC,aAAaN,MAH7C,EAKoBL,KAAKC,MAAMW,YAA9BC,EALD,EAKCA,SAAUC,EALX,EAKWA,KAEZC,GAAOC,OAAgBR,GAE7B,OACE,gBAAC,IAAD,CAAQS,SAAUjB,KAAKC,MAAMgB,SAAUZ,MAAOI,GAC5C,gBAAC,EAAD,CAAsBxC,UAAWA,IACjC,gBAAC,IAAD,CAAKoC,MAAOpC,EAAWsC,YAAaA,GAAeR,EAAKmB,UACxD,0BAAKjD,GACJqC,EACC,uBAAKT,UAAU,iBAAiBH,MAAO,CAAEyB,WAAWC,SAAQ,KACzDd,EAAKe,KAAI,SAACC,EAAKC,GAAN,OACR,gBAAC,IAAD,CAAKD,IAAKA,EAAKE,IAAKD,QAGtB,KACJ,qBACE7B,MAAK,kBACA+B,SAAM,IADN,CAEH7B,QAAQ,QACR8B,cAAcN,QAAO,OAGtBO,OAAWnB,IAEd,uBAAKoB,wBAAyB,CAAEC,OAAQ9B,EAAK+B,QAC7C,sBACEpC,MAAO,CACLgC,cAAcN,QAAO,MAGzB,gBAAC,IAAD,CAAK1B,MAAO,CAAEgC,aAAc,SAC3Bb,GAAYC,EACX,sBACEpB,MAAO,CACLE,QAAQ,OACRmC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGrB,IAAYG,OAAgBH,EAAST,YAAYI,QAAUO,GAC1D,gBAAC,EAAAoB,KAAD,CAAMC,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAApC,KACK1B,EAAST,YAAYC,QAI9B,0BACGS,IAAQE,OAAgBF,EAAKV,YAAYI,QAAUO,GAClD,gBAAC,EAAAoB,KAAD,CAAMC,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKV,YAAYC,MADpB,QAMJ,O,GA/DmBnC","file":"component---src-templates-blog-post-js-0a4ddf8f81f0fc1b54d3.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\n\nimport '../css/retomar-scroll-tooltip.css'\n\nconst RetomarScrollTooltip = ({ postTitle }) => {\n  const [showTooltip, setShowTooltip] = React.useState(false)\n\n  const interval = useRef(null)\n\n  function savePostScrolling(postTitle) {\n    interval.current = setInterval(function() {\n      localStorage.setItem(postTitle, window.scrollY)\n    }, 5000)\n  }\n\n  useEffect(() => {\n    const lastScroll = parseInt(localStorage.getItem(postTitle))\n    if (\n      localStorage.getItem(postTitle) !== null &&\n      lastScroll > 300 &&\n      window.scrollY < lastScroll - 100\n    ) {\n      setShowTooltip(true)\n    } else {\n      localStorage.removeItem(postTitle)\n      savePostScrolling(postTitle)\n    }\n    return () => {\n      clearInterval(interval.current)\n    }\n  }, [postTitle, interval])\n\n  const onClick = (option /* si | no */) => () => {\n    setShowTooltip(false)\n    if (option === 'si') {\n      const top = parseInt(localStorage.getItem(postTitle))\n      window.scrollTo({ behavior: 'smooth', top })\n    }\n    savePostScrolling(postTitle)\n  }\n\n  return (\n    <div\n      id=\"retomar\"\n      style={{\n        opacity: showTooltip ? '1' : '0',\n        display: showTooltip ? 'block' : 'none',\n      }}\n    >\n      <div className=\"arrow\" />\n      <div className=\"body\">\n        <p>¿Querés retomar desde donde dejaste?</p>\n        <div className=\"options\">\n          <span onClick={onClick('si')}>Si</span>\n          <span onClick={onClick('no')}>No</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RetomarScrollTooltip\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\nimport Tag from '../components/tag'\nimport { rhythm, scale } from '../utils/typography'\nimport { dateParser, getYearAsNumber } from '../utils/dateParser'\n\nimport RetomarScrollTooltip from '../components/retomar-scroll-tooltip'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const { title: postTitle, tags, description, date } = post.frontmatter\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    const { previous, next } = this.props.pageContext\n\n    const YYYY = getYearAsNumber(date)\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <RetomarScrollTooltip postTitle={postTitle} />\n        <Seo title={postTitle} description={description || post.excerpt} />\n        <h1>{postTitle}</h1>\n        {tags ? (\n          <div className=\"tags-container\" style={{ marginTop: rhythm(-1) }}>\n            {tags.map((tag, i) => (\n              <Tag tag={tag} key={i} />\n            ))}\n          </div>\n        ) : null}\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n          }}\n        >\n          {dateParser(date)}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio style={{ marginBottom: '0px' }} />\n        {previous || next ? (\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && getYearAsNumber(previous.frontmatter.date) === YYYY && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && getYearAsNumber(next.frontmatter.date) === YYYY && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        ) : null}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD-MM-YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}